% 20201122 by Dushan N. Wadduwage
% main forward model for cGAN-DEEP-TFM

clc;clear all;close all
addpath('./_extPatternsets/')
gpuDevice(1)

%% set parameters
pram                  = f_pram_init();
pram.pattern_typ      = 'dmd_exp_tfm_mouse_20201224_300um';  % the experimental BV,  
                           % 'dmd_exp_tfm_beads_7sls_20201219'  % for the experimental beads

                                                                % maxcounts from the calibration processes.
                                                             % pram.maxcount = {10.8549 [for mouse_400um], 8-sls
                                                             %                  25.0622 [for mouse_350um], 7-sls
                                                             %                  22.9540 [for mouse_300um], 6-sls
                                                             %                  46.7010 [for mouse_200um], 4-sls
                                                             %                  56.0317 [for mouse_100um], 2-sls
                                                             %                  25.0622 [for mouse_sf   ], 0-sls

pram.dataset          = 'mouse_neuronal_300um';     % select the case  
pram.Nt               = 32;     %number of patterns
pram.Nb               = 5000;   %Batch dimension
pram.dist             = 2;
% pram.dx = 1.625; 
% pram.Nx = 256;
% pram.Ny = 256;

%% load data
[E Y_exp X_refs pram] = f_get_extPettern(pram);
pram.maxcount        = 22.9540;    %have to set maxcount for beads data, for BV can use experimental max count. 
                                                             

%% simulate sPSF, exPSF, and emPSF        
pram.z0_um          = -2*pram.sl;                          % [um] depth (z=0 is the surface and -ve is below), set for beads
reset(gpuDevice(1));reset(gpuDevice(2));                   % to avoid "Out of memory on device..." errors 
PSFs = f_simPSFs3D(pram);                                 % simuated and saved in ./_PSFs/ dir 

%% simulate for camera noise model (generate emhist)  
% max_input_photons = max(poissrnd(pram.maxcount,[1 1000]))*2;
% N_reps            = pram.cam_emhist_Nreps;
% emhist            = f_genEmhist(max_input_photons,N_reps,pram);
                                                             % simulated and saved in ./_emhist dir and loaded

%% run simulation
switch pram.sim2dOr3d
  case '3D'
    switch pram.dataset
        
      case 'beads'
        pram.dz = pram.dx; 

        % load emhist (for camera noise model)
        load('./_emhist/emhist_29-Apr-2021_02_09_25.mat');  % upt to 100 photons
        
        %%% simulate training data
        pram.Nz     = 100;
        N_beads     = round(pram.Nz * 100/64);             

        clear DataIn DataGt
        disp(pram.Nx)
        DataIn      = zeros(pram.Ny,pram.Nx,pram.Nt,pram.Nb,'single');
        DataGt      = zeros(pram.Ny,pram.Nx,1      ,pram.Nb,'single');          
        
        X0          = f_genobj_beads3D_1um_4um(N_beads,pram);
        
        [Yhat Xgt]  = f_fwd3D(X0,E,PSFs,emhist,pram);
        Nmb         = size(Xgt,4);  %

        tic;
        t   = 1;
        for j = 1:floor(pram.Nb/Nmb)
          disp(j)
          X0                      = f_genobj_beads3D_1um_4um(N_beads,pram);
         [Yhat Xgt]               = f_fwd3D(X0,E,PSFs,emhist,pram);
          if Yhat == 0 | Xgt == 0 
            continue 
          end
          Nmb                     = size(Xgt,4);
          DataIn(:,:,:,t:t+Nmb-1) = single(gather(Yhat));
          DataGt(:,:,:,t:t+Nmb-1) = single(gather(Xgt )); 

          fprintf('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b')
          fprintf('\nbatch = %0.4d | b = %0.5d | time = %0.4d/%0.4d [mins]',...
                               j,          t,  round(toc/60), round(pram.Nb*toc/(t*60)))   

          t = t+Nmb;
        end

        DataIn                    = DataIn(:,:,:,1:t-1);
        DataGt                    = DataGt(:,:,:,1:t-1);
        
        
      case 'mouse_neuronal_100um'
        
        % load emhist (for camera noise model)
        load('./_emhist/emhist_29-Apr-2021_02_09_25.mat');  % upt to 100 photons
        
        clear DataIn DataGt
        DataIn = zeros(pram.Ny,pram.Nx,pram.Nt,pram.Nb,'single');
        DataGt = zeros(pram.Ny,pram.Nx,1      ,pram.Nb,'single');
          
        % read all cells
        load('./_datasets/PS_SOM_mice_20190317.mat')        % loads variable named Data
        pram.Nz                     = 100;                  % sets Nz of the data cube
        Nb_per_stack                = 20;                   % rough value of training images generated by scanning one stack, set as 10 in the f_fwd3d
        pram.Npch_perCell           = round(pram.Nb/(length(Data.cell)*Nb_per_stack));
        
        tic
        t   = 1;
        for i=1:length(Data.cell)
          V_ps0                      = Data.cell{i};
          V_ps = imresize(V_ps0,Data.pram.dx_ps/pram.dx);
          
          X0s                       = f_genobj_neuronPatches(V_ps,pram);
          
          for j = 1:length(X0s)
           [Yhat Xgt]               = f_fwd3D(X0s{j},E,PSFs,emhist,pram);

            Nmb                     = size(Xgt,4);
            DataIn(:,:,:,t:t+Nmb-1) = single(gather(Yhat));
            DataGt(:,:,:,t:t+Nmb-1) = single(gather(Xgt ));            
            
            fprintf('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b')
            fprintf('\nbatch = %0.4d | b = %0.5d | time = %0.4d/%0.4d [mins]',...
                                 j,          t,  round(toc/60), round(pram.Nb*toc/(t*60)))                         
            t = t+Nmb;
          end
        end
        DataIn                    = DataIn(:,:,:,1:t-1);
        DataGt                    = DataGt(:,:,:,1:t-1);
        
      case 'mouse_neuronal_300um'

        % load emhist (for camera noise model)
        load('./_emhist/emhist_29-Apr-2021_02_09_25.mat');  % upt to 100 photons
        
        clear DataIn DataGt
        DataIn = zeros(pram.Ny,pram.Nx,pram.Nt,pram.Nb,'single');
        DataGt = zeros(pram.Ny,pram.Nx,1      ,pram.Nb,'single');
          
        % read all cells
        load('./_datasets/PS_SOM_mice_20190317.mat')        % loads variable named Data
        pram.Nz                     = 100;                  % sets Nz of the data cube
        Nb_per_stack                = 20;                   % rough value of training images generated by scanning one stack, set as 10 in the f_fwd3d
        pram.Npch_perCell           = round(pram.Nb/(length(Data.cell)*Nb_per_stack));
        
        tic
       
        t   = 1;
        for i=1:length(Data.cell)
          %disp(i);
          V_ps0                     = Data.cell{i};
          
          V_ps                      = imresize(V_ps0,Data.pram.dx_ps/pram.dx);
          X0s                       = f_genobj_neuronPatches(V_ps,pram);
           
          for j = 1:length(X0s)
            %disp(j);
            [Yhat Xgt]               = f_fwd3D(X0s{j},E,PSFs,emhist,pram);
            
            Nmb                     = size(Xgt,4);
            DataIn(:,:,:,t:t+Nmb-1) = single(gather(Yhat));
            DataGt(:,:,:,t:t+Nmb-1) = single(gather(Xgt ));            
            
            fprintf('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b')
            fprintf('\nbatch = %0.4d | b = %0.5d | time = %0.4d/%0.4d [mins]',...
                                 j,          t,  round(toc/60), round(pram.Nb*toc/(t*60)))                         
            t = t+Nmb;
          end
        end
        DataIn                    = DataIn(:,:,:,1:t-1);
        DataGt                    = DataGt(:,:,:,1:t-1);   


      case 'mouse_bv_100um'
          
        pram.z0_um          = -1.8*pram.sl;     %    -2*pram.sl;                 % [um] depth (z=0 is the surface and -ve is below)
        pram.dist           = 1;
        
        % load emhist (for camera noise model)
        load('./_emhist/emhist_29-Apr-2021_02_09_25.mat');  % upt to 100 photons
        
        clear DataIn DataGt
        DataIn = zeros(pram.Ny,pram.Nx,pram.Nt,pram.Nb,'single');
        DataGt = zeros(pram.Ny,pram.Nx,1      ,pram.Nb,'single');
          
        load('./_datasets/BV_03102021.mat')

        tic
        t   = 1;
        V_ps0                   = single(Data.cell);
        Vps                     = imresize(V_ps0,Data.pram.dx/pram.dx);
        numlist     = [1:round(size(Vps,1)/8):size(Vps,1)-size(E,1)];
        numlist_zs  = [1:128:size(Vps,3)-20];
        numlist_ze  = [numlist_zs(2:end)-1 size(V_ps0,3)];
        for i = 1:length(numlist)
            for j = 1:length(numlist)
              for k = 1:length(numlist_zs)
                X0s = Vps(numlist(i):numlist(i)+size(E,1)-1,numlist(j):numlist(j)+size(E,1)-1,numlist_zs(k):numlist_ze(k));
                [Yhat Xgt]              = f_fwd3D(X0s,E,PSFs,emhist,pram);

                Nmb                     = size(Xgt,4);
                DataIn(:,:,:,t:t+Nmb-1) = single(gather(Yhat));
                DataGt(:,:,:,t:t+Nmb-1) = single(gather(Xgt ));            

                t_max                   = ((t+Nmb)/(i*j*k))*length(numlist)*length(numlist)*length(numlist_zs)

                fprintf('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b')
                fprintf('b = %0.5d | time = %0.4d/%0.4d [mins]',...
                                               t,  round(toc/60), round(t_max*toc/(t*60)))                         
                t = t+Nmb;
              end              
            end
        end 
        
        DataIn                    = DataIn(:,:,:,1:t-1);
        DataGt                    = DataGt(:,:,:,1:t-1);

       
      case 'mouse_bv_200um'
         
        pram.z0_um          = -4*pram.sl;                          % [um] depth (z=0 is the surface and -ve is below)
        pram.dist           = 1;
        
        % load emhist (for camera noise model)
        load('./_emhist/emhist_29-Apr-2021_02_09_25.mat');  % upt to 100 photons
        
        clear DataIn DataGt
        DataIn = zeros(pram.Ny,pram.Nx,pram.Nt,pram.Nb,'single');
        DataGt = zeros(pram.Ny,pram.Nx,1      ,pram.Nb,'single');
          
        % read all cells
        load('./_datasets/BV_03102021.mat')

        tic
        t   = 1;
        V_ps0                   = single(Data.cell);
        Vps                     = imresize(V_ps0,Data.pram.dx/pram.dx);
        numlist     = [1:round(size(Vps,1)/8):size(Vps,1)-size(E,1)];
        numlist_zs  = [1:128:size(Vps,3)-20];
        numlist_ze  = [numlist_zs(2:end)-1 size(V_ps0,3)];
        for i = 1:length(numlist)
            for j = 1:length(numlist)
              for k = 1:length(numlist_zs)
                X0s = Vps(numlist(i):numlist(i)+size(E,1)-1,numlist(j):numlist(j)+size(E,1)-1,numlist_zs(k):numlist_ze(k));
                [Yhat Xgt]              = f_fwd3D(X0s,E,PSFs,emhist,pram);

                Nmb                     = size(Xgt,4);
                DataIn(:,:,:,t:t+Nmb-1) = single(gather(Yhat));
                DataGt(:,:,:,t:t+Nmb-1) = single(gather(Xgt ));            

                t_max                   = ((t+Nmb)/(i*j*k))*length(numlist)*length(numlist)*length(numlist_zs)

                fprintf('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b')
                fprintf('b = %0.5d | time = %0.4d/%0.4d [mins]',...
                                               t,  round(toc/60), round(t_max*toc/(t*60)))                         
                t = t+Nmb;
              end              
            end
        end 
        
        DataIn                    = DataIn(:,:,:,1:t-1);
        DataGt                    = DataGt(:,:,:,1:t-1);


      case 'mouse_bv_300um'
        pram.z0_um          = -6*pram.sl;                          % [um] depth (z=0 is the surface and -ve is below), set for beads
        
        % load emhist (for camera noise model)
        load('./_emhist/emhist_29-Apr-2021_02_09_25.mat');  % upt to 100 photons
        
        clear DataIn DataGt
        DataIn = zeros(pram.Ny,pram.Nx,pram.Nt,pram.Nb,'single');
        DataGt = zeros(pram.Ny,pram.Nx,1      ,pram.Nb,'single');
          
        % read all cells
        load('./_datasets/BV_03102021.mat')

        tic
        t   = 1;
        V_ps0                   = single(Data.cell);
        Vps                     = imresize(V_ps0,Data.pram.dx/pram.dx);
        numlist     = [1:round(size(Vps,1)/8):size(Vps,1)-size(E,1)];
        numlist_zs  = [1:128:size(Vps,3)-20];
        numlist_ze  = [numlist_zs(2:end)-1 size(V_ps0,3)];
        for i = 1:length(numlist)
            for j = 1:length(numlist)
              for k = 1:length(numlist_zs)
                X0s = Vps(numlist(i):numlist(i)+size(E,1)-1,numlist(j):numlist(j)+size(E,1)-1,numlist_zs(k):numlist_ze(k));
                [Yhat Xgt]              = f_fwd3D(X0s,E,PSFs,emhist,pram);

                Nmb                     = size(Xgt,4);
                DataIn(:,:,:,t:t+Nmb-1) = single(gather(Yhat));
                DataGt(:,:,:,t:t+Nmb-1) = single(gather(Xgt ));            

                t_max                   = ((t+Nmb)/(i*j*k))*length(numlist)*length(numlist)*length(numlist_zs)

                fprintf('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b')
                fprintf('b = %0.5d | time = %0.4d/%0.4d [mins]',...
                                               t,  round(toc/60), round(t_max*toc/(t*60)))                         
                t = t+Nmb;
              end              
            end
        end 
        
        DataIn                    = DataIn(:,:,:,1:t-1);
        DataGt                    = DataGt(:,:,:,1:t-1);

     
    end    
end

%% save simulated data
N_sls         = round(abs(PSFs.pram.z0_um/PSFs.pram.sl));
saveDir       = ['./_results/_cnn_synthTrData/' date '/' pram.pattern_typ '/'];
nameStem      = sprintf('%s_data_%dsls_%dmc',pram.dataset,N_sls,pram.maxcount);
mkdir(saveDir)
save([saveDir nameStem datestr(datetime('now')) '_pram_plusplus.mat'],'Y_exp','X_refs','pram','E','PSFs','-v7.3');


DataIn_test   = DataIn(:,:,:,1:128);
DataGt_test   = DataGt(:,:,:,1:128);
fileNameStem  = [saveDir nameStem '_test.h5'];
f_writeDataset_hdf5(fileNameStem,DataIn_test,DataGt_test);

DataIn        = DataIn(:,:,:,128:end);
DataGt        = DataGt(:,:,:,128:end);
fileNameStem  = [saveDir nameStem '_tr.h5'];
f_writeDataset_hdf5(fileNameStem,DataIn,DataGt);


fields_Yexp   = fieldnames(Y_exp);
fields_Xrefs  = fieldnames(X_refs);
for i=1:length(fields_Yexp)  
  DataIn_exp  = Y_exp. (fields_Yexp {i}); 
  DataGt_exp  = X_refs.(fields_Xrefs{i});
  fileNameStem= [saveDir nameStem fields_Yexp{i} '_exp.h5'];
  f_writeDataset_hdf5(fileNameStem,DataIn_exp,DataGt_exp);
end


